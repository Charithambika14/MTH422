#---
#title: "Bernoulli-Beta"
#author: "Arnab Hazra"
#date: "2024-01-19"
#output: html_document
#---
  
#```{r, echo=TRUE}

rm(list = ls())

n <- 10
theta0 <- 0.4

set.seed(100)

Y <- rbinom(n, size = 1, prob = theta0) # simulated data

# prior: Beta(2, 4)
a <- 2
b <- 4

# analytical solution
theta <- rbeta(n,a+sum(Y),n-sum(Y)+b)

# fill with theoretical posterior mean, median, mode

posmean <- (sum(Y)+a)/(n+a+b) ## closed form
posmeadian <- qbeta(0.5,shape1 = sum(Y)+a,shape2=n-sum(Y)+b) ##not closed form solution
posmode <- (sum(Y)+a-1)/(n+a+b-2)

# fill with theoretical posterior standard deviation, IQR

possd <- sqrt((a+sum(Y)*(b+n-sum(Y)))/(((n+a+b)^2)*(n+a+b+1)))
posIQR <-  qbeta(0.75,shape1 = sum(Y)+a,shape2=n-sum(Y)+b) -  qbeta(0.25,shape1 = sum(Y)+a,shape2=n-sum(Y)+b)

# fill with theoretical 95% posterior equal tail CI
posCI95 <- c(qbeta(0.025,shape1 = sum(Y)+a,shape2=n-sum(Y)+b), qbeta(0.975,shape1 = sum(Y)+a,shape2=n-sum(Y)+b))
posCI95 <- qbeta(c(0.025,0.975),shape1=sum(Y)+a,shape2=n-sum(Y)+b)

# fill with theoretical 95% HPD CI
posCI <- optimize(function(x){
  ans <- qbeta(c(x,x+0.95),shape1=sum(Y)+a,shape2=n-sum(Y)+b)
  ans[2]-ans[1]},lower = 0,upper = 0.05)$minimum

posCI95.HPD <- posCI


#----------------------------------------------
# We will now try the same things but instead of doing maths, just using Monte Carlo

# posterior samples

theta.sample <-  rbeta(1e5,a+sum(Y),n-sum(Y)+b)

# plot the kernel density estimate of the posterior density 
# along with the true posterior density

approxdens <- density(theta.sample, from = 0, to = 1)
plot(approxdens$x, approxdens$y, type = "l")
lines(approxdens$x, 
      dbeta(approxdens$x,a+sum(Y),n-sum(Y)+b),
      col = 2)

# fill with posterior mean, median, mode based on Monte Carlo samples

posmean.s <- mean(theta.sample)
posmeadian.s <- median(theta.sample)
posmode.s <- approxdens$x[which.max(approxdens$y)]

# fill with posterior standard deviation and IQR based on Monte Carlo samples

possd.s <- sd(theta.sample)
posIQR.s <- quantile(qbeta,prob=0.75) -  quantile(qbeta,prob=0.25)

# fill with posterior equal-tailed 95% CI based on Monte Carlo samples

posCI95.s <-  quantile(qbeta,prob=c(0.025,0.975))

# fill with 95% HPD CI based on Monte Carlo samples

posCI95.HPD.s <- optimize(function(x){
  ans <-  quantile(qbeta,prob=c(x,x+0.95))
  ans[2]-ans[1]},lower = 0,upper = 0.05)$minimum

# compare the analytical and numerical results

table <- cbind(c(posmean, posmeadian, posmode, 
                 possd, posIQR, posCI95, posCI95.HPD),
               c(posmean.s, posmeadian.s, posmode.s, 
                 possd.s, posIQR.s, posCI95.s, posCI95.HPD.s))

colnames(table) <- c("Analytical", "Numerical")
rownames(table) <- c("Posterior mean", "Posterior median",
                     "Posterior mode", "Posterior SD",
                     "Posterior IQR", "Posterior CI lower",
                     "Posterior CI upper", "Posterior CI-HPD lower",
                     "Posterior CI-HPD upper")
table <- as.data.frame(table)
table

#```






